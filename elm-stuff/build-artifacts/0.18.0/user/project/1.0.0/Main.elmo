var _user$project$Main$invalidAge = function (model) {
	return (_elm_lang$core$Native_Utils.cmp(model.age, 1) < 0) || (_elm_lang$core$Native_Utils.cmp(model.age, 95) > 0);
};
var _user$project$Main$invalidMatch = function (model) {
	return !_elm_lang$core$Native_Utils.eq(model.password, model.passwordAgain);
};
var _user$project$Main$invalidCharacters = function (model) {
	return !(A2(
		_elm_lang$core$Regex$contains,
		_elm_lang$core$Regex$regex('[A-Z]'),
		model.password) && (A2(
		_elm_lang$core$Regex$contains,
		_elm_lang$core$Regex$regex('[a-z]'),
		model.password) && A2(
		_elm_lang$core$Regex$contains,
		_elm_lang$core$Regex$regex('[0-9]'),
		model.password)));
};
var _user$project$Main$invalidLength = function (model) {
	return (_elm_lang$core$Native_Utils.cmp(
		_elm_lang$core$String$length(model.password),
		8) < 0) && (_elm_lang$core$Native_Utils.cmp(
		_elm_lang$core$String$length(model.password),
		0) > 0);
};
var _user$project$Main$validations = {
	ctor: '::',
	_0: _user$project$Main$invalidLength,
	_1: {
		ctor: '::',
		_0: _user$project$Main$invalidCharacters,
		_1: {
			ctor: '::',
			_0: _user$project$Main$invalidMatch,
			_1: {
				ctor: '::',
				_0: _user$project$Main$invalidAge,
				_1: {ctor: '[]'}
			}
		}
	}
};
var _user$project$Main$viewValidation = function (model) {
	var _p0 = _user$project$Main$invalidLength(model) ? {ctor: '_Tuple2', _0: 'red', _1: 'Password must be 8 char'} : (_user$project$Main$invalidAge(model) ? {ctor: '_Tuple2', _0: 'red', _1: 'Invalid Age'} : (_user$project$Main$invalidCharacters(model) ? {ctor: '_Tuple2', _0: 'red', _1: 'Bad chars'} : (_user$project$Main$invalidMatch(model) ? {ctor: '_Tuple2', _0: 'red', _1: 'Passwords don\'t match'} : {ctor: '_Tuple2', _0: 'green', _1: 'OK'})));
	var color = _p0._0;
	var message = _p0._1;
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'color', _1: color},
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(message),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Name':
				return _elm_lang$core$Native_Utils.update(
					model,
					{name: _p1._0});
			case 'Age':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						age: A2(
							_elm_lang$core$Result$withDefault,
							0,
							_elm_lang$core$String$toInt(_p1._0))
					});
			case 'Password':
				return _elm_lang$core$Native_Utils.update(
					model,
					{password: _p1._0});
			case 'PasswordAgain':
				return _elm_lang$core$Native_Utils.update(
					model,
					{passwordAgain: _p1._0});
			default:
				var _p2 = _p1._0;
				var validationMessage = A3(
					_elm_lang$core$List$foldl,
					F2(
						function (test, allValid) {
							return test(_p2) ? false : allValid;
						}),
					true,
					_user$project$Main$validations) ? 'Success!' : 'Form not submitted.';
				return _elm_lang$core$Native_Utils.update(
					_p2,
					{validation: validationMessage});
		}
	});
var _user$project$Main$Model = F5(
	function (a, b, c, d, e) {
		return {name: a, age: b, password: c, passwordAgain: d, validation: e};
	});
var _user$project$Main$model = A5(_user$project$Main$Model, '', 0, '', '', '');
var _user$project$Main$Submit = function (a) {
	return {ctor: 'Submit', _0: a};
};
var _user$project$Main$PasswordAgain = function (a) {
	return {ctor: 'PasswordAgain', _0: a};
};
var _user$project$Main$Password = function (a) {
	return {ctor: 'Password', _0: a};
};
var _user$project$Main$Age = function (a) {
	return {ctor: 'Age', _0: a};
};
var _user$project$Main$Name = function (a) {
	return {ctor: 'Name', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$type_('text'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('Name'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$Name),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('text'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$placeholder('Age'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$Age),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('password'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$placeholder('Password'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$Password),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('password'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$placeholder('Password'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$PasswordAgain),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Main$Submit(model)),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Submit'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: _user$project$Main$viewValidation(model),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html$text(model.validation),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$model, view: _user$project$Main$view, update: _user$project$Main$update})();
